# -----------------------------
# 1) Deployment: Run app + expose port 8000 (HTTP)
# -----------------------------
apiVersion: apps/v1
kind: Deployment

metadata:
  namespace: medical-rag-chatbot
  name: medical-rag-chatbot-deployment
  labels:
    app: medical-rag-chatbot-deployment

spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      # The same as template.metadata.labels
      app: medical-rag-chatbot-deployment
  template:
    metadata:
      labels:
        # The same as spec.selector.matchLabels
        app: medical-rag-chatbot-deployment
    spec:
      containers:
        - name: medical-rag-chatbot-container
          image: biabeogo147/medical-rag-chatbot-app:v1.0.0
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: medical-rag-chatbot-secrets
          env:
            # config.py
            - name: APP_PORT
              value: "8000"
            - name: MODEL_NAME
              value: "gemma-3n-e2b-it"
            - name: EMBEDDING_MODEL_NAME
              value: "sentence-transformers/all-MiniLM-L6-v2"
          ports:
            - name: http
              containerPort: 8000

          # Check if app is ready to serve traffic
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 3

          # Health check to ensure app is alive
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 20
            periodSeconds: 20
            timeoutSeconds: 2
            failureThreshold: 3

          # Resource requests and limits
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "700m"
              memory: "2Gi"

---
# -----------------------------
# 2) Service public for web (LoadBalancer 80 -> 8000)
# -----------------------------
apiVersion: v1
kind: Service

metadata:
  namespace: medical-rag-chatbot
  name: medical-rag-chatbot-service
  labels:
    app: medical-rag-chatbot-service

spec:
  type: ClusterIP
  selector:
    app: medical-rag-chatbot-deployment
  ports:
    - name: web        # Port outside the cluster
      protocol: TCP
      port: 80
      targetPort: http # Target containerPort in Deployment

---
# -----------------------------
# 3) Ingress rule for medical-rag-chatbot-app
# -----------------------------
apiVersion: networking.k8s.io/v1
kind: Ingress

metadata:
  name: streamlit-ingress
  namespace: medical-rag-chatbot
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /

spec:
  ingressClassName: nginx
  rules:
    - host: streamlit.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: medical-rag-chatbot-service
                port:
                  number: 80